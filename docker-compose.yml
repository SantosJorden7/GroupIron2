version: "3.8"
services:
  group-ironmen-tracker-frontend:
    build:
      context: ./site
      dockerfile: Dockerfile.custom
    environment:
      - HOST_URL=${HOST_URL:-http://localhost:5000}
    restart: always
    container_name: group-ironmen-tracker-frontend
    ports:
      - 4000:4000 # replace this if using a docker-compatible reverse proxy like traefik
    # volumes commented out for build testing
    # volumes:
    #   - ./site:/app
    #   - /app/node_modules
    depends_on:
      - group-ironmen-tracker-backend

  group-ironmen-tracker-backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    # image: chrisleeeee/group-ironmen-tracker-backend
    environment:
      - PG_USER=${PG_USER:-postgres}
      - PG_PASSWORD=${PG_PASSWORD:-postgres}
      - PG_HOST=${PG_HOST:-postgres}
      - PG_PORT=${PG_PORT:-5432}
      - PG_DB=${PG_DB:-ironmen}
      - BACKEND_SECRET=${BACKEND_SECRET:-verysecret}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    container_name: group-ironmen-tracker-backend
    ports:
      - 5000:8080  # replace this if using a docker-compatible reverse proxy like traefik

  postgres:
    image: postgres:17-alpine
    restart: always
    container_name: group-ironmen-tracker-postgres
    environment:
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-postgres}
      POSTGRES_DB: ${PG_DB:-ironmen}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./server/src/sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql # initialize database schema

volumes:
  postgres-data:
    # No additional configuration needed for named volumes
